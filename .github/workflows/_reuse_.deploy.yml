name: 'Deploy Preview'
run-name: '🚀 Deploy: ${{ inputs.displayName }}'
on:
  workflow_call:
    inputs:
      displayName:
        type: string
        description: Name of the app being deployed
        required: true
      appDir:
        type: string
        description: Basename for the directory containing the example app being deployed.
        required: true
      imageRegistry:
        type: string
        default: ghcr.io
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build 🐋
    outputs:
      deploymentImage: ${{ steps.image.outputs.deploymentImage }}
      imageVersion: ${{ steps.image.outputs.imageVersion }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Format image name
        id: image
        # language="bashpro shell script"
        run: |
          imageName="${{ inputs.imageRegistry }}/${{ github.repository_owner }}/${{ inputs.appDir }}.example.meteor-vite"
          imageName="$(echo $imageName | tr '[:upper:]' '[:lower:]')"
          imageVersion="${{ github.ref_name }}-${GITHUB_SHA:0:7}"
          
          echo "cacheTag=$imageName:buildcache" >> $GITHUB_OUTPUT
          echo "deploymentImage=$imageName:$imageVersion" >> $GITHUB_OUTPUT
          
          echo "imageName=$imageName" >> $GITHUB_OUTPUT
          echo "imageVersion=$imageVersion" >> $GITHUB_OUTPUT

      - name: Prepare metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ steps.image.outputs.imageName }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ steps.image.outputs.deploymentImage }}
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ steps.image.outputs.cacheTag }}
          cache-to: type=registry,ref=${{ steps.image.outputs.cacheTag }},mode=max
          build-args: |
            APP_DIR=./examples/${{ inputs.appDir }}

  deploy:
    name: Deploy 🚀
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup kubectl
        # language="bashpro shell script"
        run: |
          mkdir -p ~/.kube
          echo '${{ secrets.KUBE_CONFIG_DATA }}' | base64 -d > ~/.kube/config

      - name: Apply manifest
        env:
          APP_NAME: ${{ inputs.appDir }}
          APP_VERSION: ${{ needs.build.outputs.imageVersion }}
          APP_IMAGE: ${{ needs.build.outputs.deploymentImage }}
        # language="bashpro shell script"
        run: |
          cat .kubernetes/deployments/meteor.yml | envsubst | kubectl apply -f -
