# Base deployment manifest
# Use `$ envsubst` to populate fields in the manifest before applying it.
#
# Example environment variables:
# APP_NAME="vue3"
# APP_IMAGE="example.vue3.meteor-vite:latest"
# APP_VERSION="sha-abc123" # (optional)
#
# Example usage:
# $ cat .kubernetes/deployments/meteor.yml | envsubst | kubectl apply -f -
#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "${APP_NAME}"
  namespace: "${APP_NAMESPACE}"
  labels:
    app.kubernetes.io/name: meteor-vite-example
    app.kubernetes.io/component: meteor
    app.kubernetes.io/instance: "${APP_NAME}"
    app.kubernetes.io/version: "${APP_VERSION}"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: meteor-vite-example
      app.kubernetes.io/component: meteor
      app.kubernetes.io/instance: "${APP_NAME}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: meteor-vite-example
        app.kubernetes.io/component: meteor
        app.kubernetes.io/instance: "${APP_NAME}"
        app.kubernetes.io/version: "${APP_VERSION}"
    spec:
      containers:
        - name: meteor
          image: "${APP_IMAGE}"
          ports:
            - containerPort: 3000
              name: meteor
          env:
            - name: PORT
              value: '3000'
            - name: ROOT_URL
              value: 'https://${APP_NAME}--meteor-vite.wcaserver.com'
            - name: MONGO_URL
              valueFrom:
                secretKeyRef:
                  name: meteor
                  key: mongoConnectionUri
            - name: MONGO_OPLOG_URL
              valueFrom:
                secretKeyRef:
                  name: meteor
                  key: mongoOplogConnectionUri
          resources:
            requests:
              cpu: 50m
              memory: 75Mi
            limits:
              cpu: 500m
              memory: 512Mi

---
apiVersion: v1
kind: Service
metadata:
  name: "${APP_NAME}"
  namespace: "${APP_NAMESPACE}"
  labels:
    app.kubernetes.io/name: meteor-vite-example
    app.kubernetes.io/component: meteor
    app.kubernetes.io/instance: "${APP_NAME}"
    app.kubernetes.io/version: "${APP_VERSION}"
spec:
  type: ClusterIP
  ports:
    - port: 3000
      name: meteor
  selector:
    app.kubernetes.io/name: meteor-vite-example
    app.kubernetes.io/component: meteor
    app.kubernetes.io/instance: "${APP_NAME}"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "${APP_NAME}"
  namespace: "${APP_NAMESPACE}"
  labels:
    app.kubernetes.io/name: meteor-vite-example
    app.kubernetes.io/component: meteor
    app.kubernetes.io/instance: "${APP_NAME}"
    app.kubernetes.io/version: "${APP_VERSION}"
spec:
  rules:
    - host: "${APP_NAME}--meteor-vite.wcaserver.com"
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: "${APP_NAME}"
                port:
                  number: 3000

